body{
    height: 2000px;
}
.container {
    width: 500px;
    height: 500px;
    border: 3px solid black;
    padding: 10px;
}
.box {
    width: 100px;
    height: 100px;
    background-color: red;
    animation-name: scaleup; /*실행하고자 하는 애니매이션 이름 지정*/
    animation-duration: 1s; /*지속시간*/
    animation-delay: 2s; /*지연시간*/
    animation-timing-function: linear, ease; /*값 변화의 폭*/
    animation-iteration-count: infinite/*반복 횟수 무한*/;
    animation-direction:alternate-reverse ; /*애니매이션의 방향. reverse(반대로). alternate(애니메이션이 끝난 후 반대 방향으로 진행)*/
    animation-fill-mode: both; 
    animation-play-state: running; /*재생 상태를 제어한다. running(기본값, 재생),*/
   
    /*
    forwards(끝난 후 애니매이션 끝프레임의 상태를 유자할 것인가)
    backwords(딜레이가 있을 때 애니메이션 시작 프레임을 적용 한다.)
    both (시작프레임, 끝프레임 모두 유지 한다.)
    */
    animation:scaleUp 1s 1s ease 1 normal both, fadeIn 1s 1s infinite forwards;
}   

/* 애니매이션 정의
    구간마다의 상태값을  설정 
    from ~ to : from(시작점) ~ to(끝점) 원래 상태에서 from 생략 가능
    %: 0~100% 세부조정 가능*/
@keyframes scaleup {
   /**/ form{
        width: 100px;
    }
     to{
        width: 200px;
    } 
    50%{
        width: 150px;
    } 
    75%{
        width: 150px;
    }
    100%{
        width: 200px;
    } 
    from{
        opacity: 0;
    }
    to{
        opacity: 1;
    }
}
/* opacity(투명도0(투명~)~1 (불투명)를 통해서 fedeIn(서서히 나타내는 효과) */
.box2 {
    width: 100px;
    height: 100px;
    background-color: blueviolet;
    animation: fedeIn 1s;
    animation-timing-function: linear, ease; /*값변화 폭*/
}
@keyframes fedeIn{
    from{
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* 오른쪽 하단에 동그란보튼 스크롤되어도 고정되가, 밑에서 나타나느 효과 1회 */

.btn {
    width: 50px;
    height: 50px;
    border: 3px solid black;
    border-radius: 50%;
    position: fixed;
    bottom: 50px;
    right: 50px;
    animation: fade 1s, slideUP 2s;
}

@keyframes fade {
    from {
        opacity: 0;
    }
}
@keyframes slideUP{
    from{
        transform: translateY(100px);
    }
}
